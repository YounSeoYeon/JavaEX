package ex10.for_exercise;

public class miltiarraydol {

	public static void main(String[] args) {
		

	      /*
	       * ======================================= >>> 배열 연습문제 <<< =========================
	       */

	      // <<<<<<<< 1. 다음은 이차원 board 배열이다. >>>>>>>>>>>>>

	      // ┌┬┬┬┬┬┬┬┬┬┬┐
	      // ├┼┼○●┼┼┼┼┼┼┤
	      // ├┼○●┼┼┼┼┼┼┼┤
	      // ├┼┼○┼┼┼┼┼┼┼┤
	      // ├┼┼┼●┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // └┴┴┴┴┴┴┴┴┴┴┘

	      // 위의 배열에서 인덱스 (2,1)~(4,4) 위치의 값을 (7,1)~(9,4) 위치로 거울 보듯이 다음처럼 복사하시오.
	      // ┌┬┬┬┬┬┬┬┬┬┬┐
	      // ├┼┼○●┼┼●○┼┼┤
	      // ├┼○●┼┼┼┼●○┼┤
	      // ├┼┼○┼┼┼┼○┼┼┤
	      // ├┼┼┼●┼┼●┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // ├┼┼┼┼┼┼┼┼┼┼┤
	      // └┴┴┴┴┴┴┴┴┴┴┘

	      {
	         System.out.println("--<1번 문제 풀이>----------------------");

	         char[][] board =  {
	               { '┌', '┬', '┬', '┬', '┬', '┬', '┬', '┬', '┬', '┬', '┬', '┐' },
	               { '├', '┼', '┼', '○', '●', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '○', '●', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '○', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '●', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '└', '┴', '┴', '┴', '┴', '┴', '┴', '┴', '┴', '┴', '┴', '┘' }
	         };
	         
	         // 이곳에 모양을 복사하는 코드를 작성하시오.
	         
	         
	         
	         
	         
	         // board를 출력하는 코드를 작성하시오.

	         
	         
	         
	         System.out.println();
	      }

	      // 2. 초기 boar에서 (2,1)~(4,4) 위치의 값들을 다음처럼 (2,7)~(4,10) 위치에 복사하시오. 
	      
	            // ┌┬┬┬┬┬┬┬┬┬┬┐
	            // ├┼┼○●┼┼┼┼┼┼┤
	            // ├┼○●┼┼┼┼┼┼┼┤
	            // ├┼┼○┼┼┼┼┼┼┼┤
	            // ├┼┼┼●┼┼┼┼┼┼┤
	            // ├┼┼┼┼┼┼┼┼┼┼┤
	            // ├┼┼┼┼┼┼┼┼┼┼┤
	            // ├┼┼○●┼┼┼┼┼┼┤
	            // ├┼○●┼┼┼┼┼┼┼┤
	            // ├┼┼○┼┼┼┼┼┼┼┤
	            // ├┼┼┼●┼┼┼┼┼┼┤
	            // └┴┴┴┴┴┴┴┴┴┴┘
	      
	      {
	         System.out.println("--<2번 문제 풀이>----------------------");

	         char[][] board =  {
	               { '┌', '┬', '┬', '┬', '┬', '┬', '┬', '┬', '┬', '┬', '┬', '┐' },
	               { '├', '┼', '┼', '○', '●', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '○', '●', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '○', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '●', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '├', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┼', '┤' },
	               { '└', '┴', '┴', '┴', '┴', '┴', '┴', '┴', '┴', '┴', '┴', '┘' }
	         };
	         
	         // 이곳에 모양을 복사하는 코드를 작성하시오.
	         
	         
	         
	         
	         
	         // board를 출력하는 코드를 작성하시오.

	         
	         
	         
	         System.out.println();
	      }

		
	}

}
